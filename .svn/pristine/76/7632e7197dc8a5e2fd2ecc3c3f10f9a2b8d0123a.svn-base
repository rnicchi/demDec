package it.mef.bilancio.demdec.web.spring.controller.modali;

import it.almavivaitalia.web.sh.utils.Context;
import it.mef.bilancio.demdec.manager.ListManager;
import it.mef.bilancio.demdec.to.FascicoliViewTO;
import it.mef.bilancio.demdec.web.spring.controller.AbstractDemFormController;
import it.mef.bilancio.demdec.web.spring.form.RevocaSospensioneFirmeForm;
import it.mef.bilancio.demdec.web.spring.utils.ConstantsRequestMapping;
import it.mef.bilancio.demdec.web.spring.utils.SessionAttributes;
import it.mef.bilancio.demdec.web.spring.utils.WebConstants;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;

import com.fasterxml.jackson.databind.ObjectMapper;

@RequestMapping(value = ConstantsRequestMapping.REVOCA_SOSPENSIONE_FIRME_MODALI)
public class RevSospFirmeModaliController extends AbstractDemFormController implements WebConstants, SessionAttributes{
	
	private String startView;	
	
	@Autowired
	private ServletContext servletContext;
	
	@Autowired
	private ListManager listManager;
	
	public ServletContext getServletContext() {
		return servletContext;
	}
	
	
	@Override
	public String startController(Context context) throws Throwable {
		// TODO Auto-generated method stub
		return startView;
	}
	
	/******metodo per visualizzare i decreti per Revoca Sospensione firme*****/
	public void modaleRevocaSospensioneFirme(Context context) throws Throwable {
		
		RevocaSospensioneFirmeForm form= (RevocaSospensioneFirmeForm) context.getForm();

		String tipoFlusso=form.getTipoFlusso();
		String anno=form.getAnnoEse();
		String numero=form.getNumero();
	
	    ObjectMapper mapper = new ObjectMapper();

	   Integer anno2=null;
	   Integer numero2=null;
	   Integer tipoFlusso2=null;
	   
	   if(tipoFlusso==null || tipoFlusso.equals("")){
		   tipoFlusso2=null;
	   }
	   if(anno==null || anno.equals("")){
		   anno2=null;
	   }
	   if(numero==null || numero.equals("")){
		   numero2=null;
	   }
	   
	   try{
		   anno2=new Integer(anno);
		  
	   }catch (NumberFormatException exc){
		   
	   }
	   try{
		   numero2=new Integer(numero);
	   }catch (NumberFormatException exc){
		   numero2=(numero==null || numero.trim().equals(""))?null:-1;
	   }
	   try{
		   tipoFlusso2=new Integer(tipoFlusso);
	   }catch (NumberFormatException exc){
		   
	   }
	   
	   
	    
	    FascicoliViewTO fascTo=null;
	    
	    context.getResponse().setContentType("application/json");   
		
		HttpServletResponse resp=context.getResponse();
		List<FascicoliViewTO> articles=null;
		
	   try {
		   articles=listManager.findRevSospFirmeListaDecretiByTipoNumAnno(anno2, tipoFlusso2, numero2);
	
	   }catch (Exception ex){
		  // errors=new ArrayList<String>() ; 
		   articles=new ArrayList<FascicoliViewTO> ();
		   fascTo=new FascicoliViewTO();
		   fascTo.setDescSigla("ERRORE");
		   articles.add(fascTo);
	
	   }
	   
	   mapper.writeValue(resp.getOutputStream(), articles);
	   
	    resp.getOutputStream().flush();
	    resp.getOutputStream().close();


	}

	public void setStartView(String startView) {
		this.startView = startView;
	}
	

}
