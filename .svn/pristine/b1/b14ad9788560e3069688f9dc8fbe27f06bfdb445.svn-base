package it.mef.bilancio.demdec.web.spring.controller.fascicolifad;

import java.util.List;

import org.apache.log4j.Logger;
//import org.apache.poi.hssf.util.HSSFColor.BLUE;
//import org.apache.poi.hssf.util.HSSFColor.BLUE_GREY;
//import org.hibernate.Hibernate;
import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.core.io.ResourceLoader;
//import org.springframework.http.HttpHeaders;
//import org.springframework.http.HttpStatus;
//import org.springframework.http.MediaType;
//import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;

import it.almavivaitalia.bilancio.commons.to.AnagTipoRiepilogoTO;

/**
 * 
 */

//import it.almavivaitalia.bilancio.commons.to.AnagAmminDemTO;
import it.almavivaitalia.bilancio.commons.to.AnagTipologiaTagliaTO;
//import it.almavivaitalia.bilancio.commons.to.AnagUfficiTO;
import it.almavivaitalia.bsn.sh.paginator.Paginator;
import it.almavivaitalia.bsn.sh.utils.PaginatorUtil;
import it.almavivaitalia.bsn.sh.utils.StringUtil;
import it.almavivaitalia.web.sh.utils.Context;
//import it.consip.pat.common.constants.ICommonWebConstants;
//import it.consip.pat.common.model.Decreto;
//import it.consip.pat.common.model.DecretoAmministrazione;
//import it.consip.pat.common.model.LetteraIgb;
//import it.consip.pat.common.model.bilancio.CentroResponsabilita;
//import it.consip.pat.common.model.type.NumeroTitolo;
//import it.consip.rpp.core.constants.IFunzioniConstants;
//import it.consip.rpp.core.constants.IHelpConstants;
//import it.consip.rpp.core.decreto.business.manager.DecretoManager;
//import it.consip.rpp.core.decreto.business.manager.letterePreRegManager;
//import it.consip.rpp.web.common.constants.ISessionConstants;
//import it.consip.rpp.web.common.constants.IWebConstants;
//import it.consip.rpp.web.common.controllers.AbstractController;
import it.mef.bilancio.demdec.manager.LetterePreRegManager;
import it.mef.bilancio.demdec.manager.ListManager;
import it.mef.bilancio.demdec.manager.RiepilogoAdDemManager;
import it.mef.bilancio.demdec.to.FascicoliFadSearhTO;
import it.mef.bilancio.demdec.to.FascicoliTO;
//import it.mef.bilancio.demdec.to.LettereIgbTO;
import it.mef.bilancio.demdec.to.RiepilogoAdDemTO;
import it.mef.bilancio.demdec.to.StrumentoTO;
//import it.mef.bilancio.demdec.utils.Constants;
import it.mef.bilancio.demdec.web.spring.controller.AbstractDemFormController;
import it.mef.bilancio.demdec.web.spring.form.PredTagliatellaForm;
//import it.mef.bilancio.demdec.web.spring.form.ConsultaFascicoloFadForm;
//import it.mef.bilancio.demdec.web.spring.form.PredLetterePreRegForm;
import it.mef.bilancio.demdec.web.spring.utils.ConstantsRequestMapping;
//import it.mef.bilancio.demdec.web.spring.utils.NomeFunzioneConstants;
import it.mef.bilancio.demdec.web.spring.utils.SessionAttributes;
import it.mef.bilancio.demdec.web.spring.utils.WebConstants;
//import javax.persistence.criteria.JoinType;
/**
 * @author RNicchi
 *
 */


@RequestMapping(value = ConstantsRequestMapping.PREDISPOSIZIONE_TAGLIATELLA)
public class PredTagliatellaController extends AbstractDemFormController implements WebConstants, SessionAttributes{
	

	
	private static Logger _LOG = Logger.getLogger(PredTagliatellaController.class);
	
	private String startView;	
	 
	private String listaDecretiView;
	
	private String predDecretoPerTagliatellaView;
		
	 @Autowired
	 private ListManager listManager;

	 @Autowired
	 private LetterePreRegManager letterePreRegManager;
	 
	 @Autowired
	 private RiepilogoAdDemManager riepilogoAdDemManager;
	 
	 
	 public void setStartView(String startView) {
			this.startView = startView;
	}
	 
 
	 public void setListaDecretiView(String listaDecretiView) {
			this.listaDecretiView = listaDecretiView;
		}


	public void setPredDecretoPerTagliatellaView(String predDecretoPerTagliatellaView) {
		this.predDecretoPerTagliatellaView = predDecretoPerTagliatellaView;
	}


	@Override
		public String startController(Context context) throws Throwable {
			
			context.setCurrentNode("DemDec.menu.PredisposizioneTagliatella");
			context.setDataModel(SessionAttributes.LIST_ANNO_ESE, listManager.loadEserciziDemCG());
			context.setDataModel(SessionAttributes.LIST_TIPI_DECRETI, listManager.loadAnagTipoDecreto());
			context.setDataModel(SessionAttributes.LIST_ANAG_UFF, listManager.loadAnagUfficiAttivi());
			
			return startView;
	 }
	 
	 	

	 public String onRicercaDecreti(Context context)throws Throwable{
		 PredTagliatellaForm form=(PredTagliatellaForm) context.getForm();
			if(!form.isValid()){
				return startView;
			}
			
			FascicoliFadSearhTO to = new FascicoliFadSearhTO();

			to.setAnnoDecreto(form.getAnnoDecreto());
			to.setNumeDecreto(form.getNumeDecreto());
			to.setTipoDecreto(form.getTipoDecreto());
			
			if(!form.getAmministrazione().isEmpty()){
				to.setNumStp(form.getAmministrazione().substring(0,2));
				to.setNumeApp(form.getAmministrazione().substring(2));
			}
			
			if(!form.getUfficio().isEmpty()){
			to.setUfficio(form.getUfficio());
			}
			
			java.util.List<FascicoliTO> lista = getGestioneFadManager().getFascicoliFad(to);
			
			if (lista==null || lista.size()==0){
				PaginatorUtil.removePaginator(context, LIST_FASCICOLI_FAD);
				context.addWarning("warning.empty");
				return startView;
			}
			PaginatorUtil.addPaginator(lista, LIST_FASCICOLI_FAD, Paginator.PAGE_RANGE_15, context);
			
			return  listaDecretiView;
		}
	 
	 public String onPredisponi(Context context)throws Throwable{
		 PredTagliatellaForm form=(PredTagliatellaForm) context.getForm();
			if(!form.isValid()){
				return listaDecretiView;
			}
			
			form.getNumeDecreto();
			
			java.util.List<FascicoliTO> listFascicoli=context.getModel(LIST_FASCICOLI_FAD);
			
			
			String rowNum =null;
			rowNum=getParameter(context, "predisponi");
			form.setRadioButtonDecreti(rowNum);
			
			FascicoliTO fascicolo=listFascicoli.get(Integer.valueOf(form.getRadioButtonDecreti()));//-1
						
			context.setDataModel(SessionAttributes.FASCICOLO_PER_TAGLIATELLA, fascicolo);
			
			form.setDescDecreto(fascicolo.getDescDecreto());
						
		//	List<AnagTipologiaTagliaTO> listTipologiaTaglia = listManager.loadAnagTipologiaTaglia();	
			List<AnagTipoRiepilogoTO> listTipologiaTaglia = listManager.loadAnagTipoRiepilogo();
			context.setDataModel(SessionAttributes.LIST_TIPOLOGIA_TAGLIA, listTipologiaTaglia);

			
			return  predDecretoPerTagliatellaView;
		}
			
	 

	/*		if( StringUtil.isEmpty(radButtDecr)){
				rowNum=getParameter(context, "stampa");
			}else {
				rowNum=form.getRadioButtonDecreti();
			}
//		}else {
//			rowNum=rowNum0;
//		}
		form.setRadioButtonDecreti(rowNum);
		
		FascicoliTO fascicolo=listFascicoli.get(Integer.valueOf(rowNum));
		*/

	 public String onNuovaRicerca(Context context)  {
		 PredTagliatellaForm form=(PredTagliatellaForm) context.getForm();

	    	form.setAnnoDecreto(null);
	    	form.setNumeDecreto(null);
	    	form.setTipoDecreto(null);
	    	
			return startView;
			
		}
	 
	 
 		public String onCaricaTipologiaDecretoFadPage(Context context)throws Throwable{
 			PredTagliatellaForm form=(PredTagliatellaForm) context.getForm();
 			if (form.isValid()){
 				if(form.getTipoDecreto() != null && !"".equals(form.getTipoDecreto())){
 					context.setDataModel(LIST_TIPOLOGIA_DECRETO, listManager.tipologiaDecretoList(Integer.parseInt(form.getTipoDecreto())));
 				}
 				else {
 					context.setDataModel(LIST_TIPOLOGIA_DECRETO, listManager.tipologiaDecretoList(null));
 				}
 			}
 			return startView;
 		}
	 		
 		public String onCaricaAmmin(Context context)throws Throwable{
 			PredTagliatellaForm form = context.getForm();
 			if (form.isValid()){
 				context.setDataModel(SessionAttributes.LIST_AMMIN_DEM, listManager.getAmminDemByAnnoEse(form.getAnnoDecreto()));
 			}
 			return startView;
 		}
 		
 		
 		
 		public String creaTestoLegge(List<RiepilogoAdDemTO> listaRiepilogo) throws Throwable{

 			StrumentoTO strumLegge = 
 					riepilogoAdDemManager.findLeggeByRiepilogoAdDem(listaRiepilogo.get(0).getEseAnnoEse(), 
 							listaRiepilogo.get(0).getAttNumeTipo(), listaRiepilogo.get(0).getNumeNum());
 			
         	//INIZIO COSTRUZIONE TESTO LEGGE
         	String descLegge = "";
         	
         	if(strumLegge.getSigla() != null)
         		descLegge = descLegge +  strumLegge.getSigla() + " ";
         			
         	if(strumLegge.getNumeLeg() != null)
         		descLegge = descLegge + strumLegge.getNumeLeg() + "/";
         	
         	if(strumLegge.getAnnoLeg() != null)
         		descLegge = descLegge + strumLegge.getAnnoLeg();
         	 	
         	if(strumLegge.getNumeArt() != null)		
         		descLegge = descLegge + " art. " + strumLegge.getNumeArt();
         	
         	if(strumLegge.getDescSubArt() != null)	
         		descLegge = descLegge + " " + strumLegge.getDescSubArt();
         	  
         	if(strumLegge.getNumeComma() != null)	 
         		descLegge = descLegge +  ", comma " + strumLegge.getNumeComma();
         	  
         	if(strumLegge.getDescSubComma() != null)
         		descLegge = descLegge + " " + strumLegge.getDescSubComma();
         	
         	if(strumLegge.getCodiPunto() != null)
         		descLegge = descLegge + ", punto " + strumLegge.getCodiPunto();
         	
         	if(strumLegge.getDescSubPunto() != null)
         		descLegge = descLegge + " " + strumLegge.getDescSubPunto();
         	
         	//FINE COSTRUZIONE TESTO LEGGE
 			
			return descLegge;
 		}
		
	
}

