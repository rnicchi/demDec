package it.mef.bilancio.demdec.web.spring.controller.fascicolifad;

import it.almavivaitalia.bsn.sh.paginator.Paginator;
import it.almavivaitalia.bsn.sh.utils.PaginatorUtil;
import it.almavivaitalia.web.sh.utils.Context;
import it.mef.bilancio.demdec.manager.LetterePreRegManager;
import it.mef.bilancio.demdec.manager.ListManager;
import it.mef.bilancio.demdec.to.FascicoliFadSearhTO;
import it.mef.bilancio.demdec.to.FascicoliTO;
import it.mef.bilancio.demdec.to.LettereIgbTO;
import it.mef.bilancio.demdec.utils.Constants;
import it.mef.bilancio.demdec.web.spring.controller.AbstractDemFormController;
import it.mef.bilancio.demdec.web.spring.form.InvioPecPartecipazioneForm;
import it.mef.bilancio.demdec.web.spring.utils.ConstantsRequestMapping;
import it.mef.bilancio.demdec.web.spring.utils.SessionAttributes;
import it.mef.bilancio.demdec.web.spring.utils.WebConstants;

import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;

@RequestMapping(value = ConstantsRequestMapping.INVIO_PEC_PARTECIPAZIONE)
public class InvioPecPartecipazioneController  extends AbstractDemFormController implements WebConstants, SessionAttributes{

	 private static Logger _LOG = Logger.getLogger(InvioPecPartecipazioneController.class);
	
	 private String startView;	
	 
	 private String listaDecretiView;
	
	 @Autowired
	 private ListManager listManager;
	
	 @Autowired
	 private LetterePreRegManager letterePreRegManager;
	 
	 public void setStartView(String startView) {
			this.startView = startView;
	}

	public void setListaDecretiView(String listaDecretiView) {
			this.listaDecretiView = listaDecretiView;
	}
	 
	@Override
	public String startController(Context context) throws Throwable {
		context.setCurrentNode("DemDec.menu.InvioPecPartecipazione");
		context.setDataModel(SessionAttributes.LIST_ANNO_ESE, listManager.loadEserciziDemCG());
		context.setDataModel(SessionAttributes.LIST_TIPI_DECRETI, listManager.loadAnagTipoDecreto());
		context.setDataModel(SessionAttributes.LIST_ANAG_UFF, listManager.loadAnagUfficiAttivi());
		
		return startView;
	}
	
	
	public String onRicercaDecreti(Context context)throws Throwable{
		InvioPecPartecipazioneForm form=(InvioPecPartecipazioneForm) context.getForm();
		
		if(!form.isValid()){
			return startView;
		}
		
		FascicoliFadSearhTO to = new FascicoliFadSearhTO();
		to.setAmmin(form.getAmministrazione());
		to.setAnnoDecreto(form.getAnnoDecreto());
		to.setCdr(form.getCdr());
		to.setDataArrivoA(form.getDataArrivoA());
		to.setDataArrivoDa(form.getDataArrivoDa());
		to.setNumeDecreto(form.getNumeDecreto());
		to.setNumePat(form.getNumePat());
		to.setStato(Constants.STATO_FAD_APERTO); 
		to.setTipoDecreto(form.getTipoDecreto());
		to.setTipologiaDecreto(form.getTipologiaDecreto());
		to.setUfficio(form.getUfficio());
		
		java.util.List<FascicoliTO> lista = getGestioneFadManager().getFascicoliFad(to);
		
		LettereIgbTO letteraTo=new LettereIgbTO();
		
		//controllo se un fascicolo ha già lettere associate
		for (int i = 0; i < lista.size(); i++) {
			letteraTo.setFascicoli(lista.get(i));
			List<LettereIgbTO> listaLettere=letterePreRegManager.findByLettera(letteraTo);
			lista.get(i).setFlagLetterePreReg((listaLettere!=null && listaLettere.size()>0)?1:0);
		}
		
		if (lista==null || lista.size()==0){
			PaginatorUtil.removePaginator(context, LIST_FASCICOLI_FAD);
			context.addWarning("warning.empty");
			return startView;
		}
		PaginatorUtil.addPaginator(lista, LIST_FASCICOLI_FAD, Paginator.PAGE_RANGE_15, context);
		//context.setDataModel(SessionAttributes.LIST_FASCICOLI_FAD, lista);
		
		return  listaDecretiView;
	}
	


}
